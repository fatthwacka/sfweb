services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    platform: linux/amd64  # Ensures compatibility across Intel and Apple Silicon
    container_name: sfweb-postgres
    environment:
      POSTGRES_DB: slyfox_studios
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/seed-supabase.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - sfweb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # SlyFox Studios Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
      platforms:
        - linux/amd64
        - linux/arm64
    container_name: sfweb-app
    environment:
      NODE_ENV: production
      PORT: 5000
      DOCKER_ENV: "true"
      # Inherit all environment variables from .env file
      DATABASE_URL: ${DATABASE_URL}
      VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
      VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      VITE_RECAPTCHA_SITE_KEY: ${VITE_RECAPTCHA_SITE_KEY}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      SMTP_EMAIL: ${SMTP_EMAIL}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    volumes:
      # Mount source code for development hot reload
      - .:/app
      - /app/node_modules
      - /app/dist
      # Mount public assets
      - ./public:/app/public
      # Mount configuration data for persistence across containers
      - config_data:/app/server/data
    ports:
      - "3000:5000"
    # No dependency on local postgres since we're using Supabase
    networks:
      - sfweb-network
      - root_default  # Connect to Traefik network
    restart: unless-stopped
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=root_default"
      
      # HTTP to HTTPS redirect
      - "traefik.http.routers.slyfox-http.rule=Host(`slyfox.co.za`)"
      - "traefik.http.routers.slyfox-http.entrypoints=web"
      - "traefik.http.routers.slyfox-http.middlewares=slyfox-redirect"
      - "traefik.http.middlewares.slyfox-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.slyfox-redirect.redirectscheme.permanent=true"
      
      # HTTPS configuration
      - "traefik.http.routers.slyfox-https.rule=Host(`slyfox.co.za`)"
      - "traefik.http.routers.slyfox-https.entrypoints=websecure"
      - "traefik.http.routers.slyfox-https.tls=true"
      - "traefik.http.routers.slyfox-https.tls.certresolver=mytlschallenge"
      
      # Service configuration
      - "traefik.http.services.slyfox.loadbalancer.server.port=5000"

  # Development-only: Adminer for database management
  adminer:
    image: adminer:4.8.1
    platform: linux/amd64
    container_name: sfweb-adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - sfweb-network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  config_data:
    driver: local

networks:
  sfweb-network:
    driver: bridge
  root_default:
    external: true